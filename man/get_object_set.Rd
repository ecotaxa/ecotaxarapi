% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_object_set.R
\name{get_object_set}
\alias{get_object_set}
\title{Get Object Set}
\usage{
get_object_set(
  project_id,
  fields = NULL,
  order_field = NULL,
  window_start = NULL,
  window_size = NULL,
  taxo = NULL,
  taxochild = NULL,
  statusfilter = NULL,
  MapN = NULL,
  MapW = NULL,
  MapE = NULL,
  MapS = NULL,
  depthmin = NULL,
  depthmax = NULL,
  samples = NULL,
  instrum = NULL,
  daytime = NULL,
  month = NULL,
  fromdate = NULL,
  todate = NULL,
  fromtime = NULL,
  totime = NULL,
  inverttime = NULL,
  validfromdate = NULL,
  validtodate = NULL,
  freenum = NULL,
  freenumst = NULL,
  freenumend = NULL,
  freetxt = NULL,
  freetxtval = NULL,
  filt_annot = NULL,
  filt_last_annot = NULL
)
}
\arguments{
\item{project_id}{integer; Internal, numeric id of the project.}

\item{fields}{string;  Specify the needed object (and ancillary entities) fields. It follows the naming convention 'prefix.field' : Prefix is either 'obj' for main object, 'fre' for free fields, 'img' for the visible image. The column obj.imgcount contains the total count of images for the object. Use a comma to separate fields. ðŸ’¡ More help : You can get the field labels by parsing the classiffieldlist returned by a call to https://ecotaxa.obs-vlfr.fr/api/docs#/projects/project_query_projects__project_id__get. \strong{Note that the following fields must be prefixed with the header "obj."} (for example â†’ obj.orig_id): acquisid classif_auto_id, classif_auto_score, classif_auto_when, classif_crossvalidation_id, classif_id, classif_qual, classif_who, classif_when, complement_info, depth_max, depth_min, latitude, longitude, objdate, object_link, objid, objtime, orig_id, random_value, similarity, sunpos. \strong{Note that the following fields must be prefixed with the header "img."} (for example â†’ img.file_name): file_name, height, imgid, imgrank, file_name, orig, objid, file_name thumb_file_name, thumb_height, thumb_width, width. \strong{Note that the following fields must be prefixed with the header "txo."} (for example â†’ txo.display_name): creation_datetime, creator_email, display_name, id, id_instance, id_source, lastupdate_datetime, name, nbrobj, nbrobjcum, parent_id, rename_to source_desc, source_url, taxostatus, taxotype. \strong{All other fields must be prefixed by the header "fre."} (for example â†’ fre.circ.).}

\item{order_field}{string; Order the result using given field. If prefixed with "-" then it will be reversed.}

\item{window_start}{integer;  Allows to return only a slice of the result, by skipping window_start objects before returning data. If no \strong{unique order} is specified, the result can vary for same call and conditions.}

\item{window_size}{integer;  Allows to return only a slice of the result, by returning a \emph{maximum} of window_size lines. If no \strong{unique order} is specified, the result can vary for same call and conditions.}

\item{taxo}{string; Coma-separated list of numeric taxonomy/category ids. Only include objects classified with one of them.}

\item{taxochild}{string; If 'Y' and taxo is set, also include children of each member of 'taxo' list in taxonomy tree.}

\item{statusfilter}{string; Include objects with given status: 'NV': Not validated 'PV': Predicted or Validated 'PVD': Predicted or Validated or Dubious 'NVM': Validated, but not by me 'VM': Validated by me 'U': Not classified other: direct equality comparison with DB value}

\item{MapN}{string; If all 4 are set (MapN, MapW, MapE, MapS), include objects inside the defined bounding rectangle.}

\item{MapW}{string; If all 4 are set (MapN, MapW, MapE, MapS), include objects inside the defined bounding rectangle.}

\item{MapE}{string; If all 4 are set (MapN, MapW, MapE, MapS), include objects inside the defined bounding rectangle.}

\item{MapS}{string; If all 4 are set (MapN, MapW, MapE, MapS), include objects inside the defined bounding rectangle.}

\item{depthmin}{string; Positive values. If both are set (depthmin, depthmax), include objects for which both depths (min and max) are inside the range.}

\item{depthmax}{string; Positive values. If both are set (depthmin, depthmax), include objects for which both depths (min and max) are inside the range.}

\item{samples}{string; Coma-separated list of sample IDs, include only objects for these samples.}

\item{instrum}{string; Instrument name, include objects for which sampling was done using this instrument.}

\item{daytime}{string; Coma-separated list of sun position values: D for Day, U for Dusk, N for Night, A for Dawn (Aube in French).}

\item{month}{string; Coma-separated list of month numbers, 1=Jan and so on.}

\item{fromdate}{string; Format is 'YYYY-MM-DD', include objects collected after this date.}

\item{todate}{string; Format is 'YYYY-MM-DD', include objects collected before this date.}

\item{fromtime}{string; Format is 'HH24:MM:SS', include objects collected after this time of day.}

\item{totime}{string; Format is 'HH24:MM:SS', include objects collected before this time of day.}

\item{inverttime}{string; If '1', include objects outside fromtime and totime range.}

\item{validfromdate}{string; Format is 'YYYY-MM-DD HH24:MI', include objects validated/set to dubious after this date+time.}

\item{validtodate}{string; Format is 'YYYY-MM-DD HH24:MI', include objects validated/set to dubious before this date+time.}

\item{freenum}{string; Numerical DB column number in Object as basis for the 2 following criteria (freenumst, freenumend).}

\item{freenumst}{string; Start of included range for the column defined by freenum, in which objects are included.}

\item{freenumend}{string; End of included range for the column defined by freenum, in which objects are included.}

\item{freetxt}{string;  Textual DB column number as basis for following criteria (freetxtval) If starts with 's' then it's a text column in Sample If starts with 'a' then it's a text column in Acquisition If starts with 'p' then it's a text column in Process If starts with 'o' then it's a text column in Object .}

\item{freetxtval}{string; Text to match in the column defined by freetxt, for an object to be include.}

\item{filt_annot}{string; Coma-separated list of annotators, i.e. persons who validated the classification at any point in time.}

\item{filt_last_annot}{string; Coma-separated list of annotators, i.e. persons who validated the classification in last.}
}
\description{
Returns \strong{filtered object Ids} for the given project.
}
